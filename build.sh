#!/bin/bash

# JellyScout Plugin Build Script
# This script builds the plugin and creates a distribution package

set -e

echo "🔨 Building JellyScout Plugin..."

# Configuration
PROJECT_NAME="Jellyfin.Plugin.JellyScout"
VERSION="0.1.0"
BUILD_DIR="bin/Release/net8.0"
DIST_DIR="dist"
PACKAGE_NAME="JellyScout-v${VERSION}"

# Clean previous builds
echo "🧹 Cleaning previous builds..."
rm -rf bin/ obj/ ${DIST_DIR}/

# Restore dependencies
echo "📦 Restoring dependencies..."
dotnet restore

# Build the project
echo "🏗️  Building project..."
dotnet build --configuration Release --no-restore

# Create distribution directory
echo "📁 Creating distribution package..."
mkdir -p ${DIST_DIR}

# Copy ONLY the DLL file (icon is embedded, meta.json is auto-generated by Jellyfin)
echo "📋 Copying DLL file..."
mkdir -p ${DIST_DIR}
zip -j ${DIST_DIR}/${PACKAGE_NAME}.zip ${BUILD_DIR}/${PROJECT_NAME}.dll

# Create checksums
echo "🔐 Creating checksums..."
cd ${DIST_DIR}
if command -v md5sum &> /dev/null; then
    MD5_CHECKSUM=$(md5sum ${PACKAGE_NAME}.zip | cut -d' ' -f1)
    echo "${MD5_CHECKSUM}" > ${PACKAGE_NAME}.zip.md5
elif command -v md5 &> /dev/null; then
    MD5_CHECKSUM=$(md5 -q ${PACKAGE_NAME}.zip)
    echo "${MD5_CHECKSUM}" > ${PACKAGE_NAME}.zip.md5
else
    echo "❌ No MD5 utility found"
    exit 1
fi
cd ..

# Display results
echo "✅ Build completed successfully!"
echo ""
echo "📦 Package: ${DIST_DIR}/${PACKAGE_NAME}.zip"
echo "🔐 MD5 Checksum: ${MD5_CHECKSUM}"
echo ""
echo "📋 Plugin structure: Only DLL (icon embedded, meta.json auto-generated)"
echo ""
echo "Installation Instructions:"
echo "1. Extract the zip file to your Jellyfin plugins directory:"
echo "   - Windows: C:\\ProgramData\\Jellyfin\\Server\\plugins\\JellyScout\\"
echo "   - Linux: /var/lib/jellyfin/plugins/JellyScout/"
echo "   - macOS: ~/.local/share/jellyfin/plugins/JellyScout/"
echo "2. Restart Jellyfin server"
echo "3. Configure the plugin in Jellyfin Admin → Plugins → JellyScout"
echo ""
echo "📚 For detailed installation instructions, see INSTALLATION.md" 